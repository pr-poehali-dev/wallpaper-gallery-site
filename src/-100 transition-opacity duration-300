
            <Button size="sm" variantcomponents/ProductCard.tsx">
import="secondary" className="w { Card, CardContent, CardFooter } from '@/components/ui/car-10 h-10d';
import { Button } from '@/ p-0components/ui/button';
import { Badge } from bg-white '@/components/ui/badge';/90 hover:bg
import Icon from '@/components/ui/icon-white">
              <Heart';
import type { Wallpaper } from '@/data/wall className="h-4 w-4papers';

interface ProductCardProps {
  product: Wallp" />
            </Button>
            aper;
}

const ProductCard = ({ product <Button size="sm" variant="secondary" className="w-10 }: ProductCardProps) => {
  returnh-10 p-0 bg-white/90 hover: (
    <Card className="groupbg-white"> hover:shadow-lg transition-all duration-300 hover
              <Eye className="h-4 w-4" />:-translate-y-
            </Button>
          </div>
          
          {/* Overlay */}
          1 overflow-hidden bg-white">
      <div className="relative overflow-hidden">
        <div className="absolute in<img 
          src={product.image} 
          alt={product.title}set-0 bg-black/0 group-hover:bg
          className="w-full h-black/20 transition-colors duration-300" />
        </div>
        
        {/*-64 object-cover Content */}
        <div className group-hover:scale-105 ="p-4 spacetransition-transform duration-300"
        />
        -y-3">
          {/* Category */}
          <Badge className="absolute top-3<Badge variant="outline" className="text left-3 bg-purple-500-xs text-gray-500 hover:bg-purple-600"> border-gray-300">
            {
          {product.category}category}
          </Badge>
        </Badge>
        
          
          {/* Title */}<Button 
          variant="outline" 
          <h3 className="
          size="icon"
          className="absolute top-3 right-3 bg-white/90 backdrop-blur-sm hover:bg-font-semibold text-white opacity-0 group-hover:opacity-100[#1A1F2C] text-lg leading-tight group-hover:text-[#9b87f5] transition-colors duration-300"> transition-opacity duration-300"
            {title}
          
        >
          <Icon name="Heart</h3>
          
          {" className="w-4 h/* Price */}
          <div className="flex-4" />
        </Button items-center space-x-2">
            <span>
      </div>
      
      <CardContent className="p className="text-2xl font--4">
        <h3 className="bold text-[#9b87f5font-semibold text-lg mb-2]">
              {price.toLocaleString text-gray-900()}₽
            </span font-montserrat>
            {originalPrice && (
              <span className">{product.title}</h3>
        ="text-sm text-gray-500 line-<p className="text-gray-600 textthrough">
                {originalPrice.toLocaleString()}₽-sm mb-3 line-
              </span>
            )}
          </div>clamp-2">{product.description}</p>
          
          {/* Ad
        
        <div className="d to Cart Button */}flex items-center justify-between mb-3">
          <div
          <Button 
            className="w-full bg-[# className="flex items-center space-x-4 text-sm text9b87f5] hover:-gray-500">
            bg-[#7E69AB<span>{product.specifications] text-white font-semibold py-2 opacity.width}</span>
            <span>•</span>-0 group-hover:opacity-100 transition-all duration-300 transform
            <span>{product.specifications.material}</span>
          </div>
         translate-y-2</div>
        
         group-hover:translate-y<div className="flex items-center justify-between">
          <span className-0"
          >
            <ShoppingCart className="="text-2xl font-bold text-purple-600">
            {product.price.toLocaleStringmr-2 h-4 w()} ₽
          </span>
          -4" />
            В корзину
          </Button><span className="text-sm text-gray-500
        </div>
      </Car">за рулон</span>
        </div>
      </CardContent>
      
      <CardContent>
    </Card>
  );
};

export default WallpaperCard;
